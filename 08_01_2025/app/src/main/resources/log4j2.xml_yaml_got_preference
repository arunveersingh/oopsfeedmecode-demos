<?xml version="1.0" encoding="UTF-8"?>
<Configuration>
    <Appenders>
        <Console name="Console" target="SYSTEM_OUT">
            <PatternLayout
                    pattern="%style{%d{ISO8601}}{black} %highlight{%-5level }[%style{%t}{bright,blue}] %style{%C{1}}{bright,yellow}: %msg%n%throwable" />
        </Console>

        <!--<RollingFile name="RollingFile"
                     fileName="./logs/spring-boot-logger-log4j2.log"
                     filePattern="./logs/$${date:yyyy-MM}/spring-boot-logger-log4j2-%d{-dd-MMMM-yyyy}-%i.log.gz">
            <PatternLayout>
                <pattern>%d %p %C{1} [%t] %m%n</pattern>
            </PatternLayout>
            <Policies>
                <OnStartupTriggeringPolicy />
                <SizeBasedTriggeringPolicy
                        size="10 MB" />
                <TimeBasedTriggeringPolicy />
            </Policies>
        </RollingFile>-->
    </Appenders>

    <Loggers>
        <!-- LOG everything at INFO level -->
        <Root level="debug">
            <AppenderRef ref="Console" />
            <!--<AppenderRef ref="RollingFile" />-->
        </Root>

        <Logger name="com.oopsfeedmecode" level="trace"></Logger>
    </Loggers>

</Configuration>

<!-- Log4j will inspect the "log4j.configurationFile" system property and, if set, will attempt to load the configuration using the ConfigurationFactory that matches the file extension.
     If no system property is set the properties ConfigurationFactory will look for log4j2-test.properties in the classpath.
     If no such file is found the YAML ConfigurationFactory will look for log4j2-test.yaml or log4j2-test.yml in the classpath.
     If no such file is found the JSON ConfigurationFactory will look for log4j2-test.json or log4j2-test.jsn in the classpath.
     If no such file is found the XML ConfigurationFactory will look for log4j2-test.xml in the classpath.
     If a test file cannot be located the properties ConfigurationFactory will look for log4j2.properties on the classpath.
     If a properties file cannot be located the YAML ConfigurationFactory will look for log4j2.yaml or log4j2.yml on the classpath.
     If a YAML file cannot be located the JSON ConfigurationFactory will look for log4j2.json or log4j2.jsn on the classpath.
     If a JSON file cannot be located the XML ConfigurationFactory will try to locate log4j2.xml on the classpath.

     https://logging.apache.org/log4j/2.12.x/manual/configuration.html#:~:text=Configuration%20of%20Log4j%202%20can,a%20ConfigurationFactory%20and%20Configuration%20implementation.
     -->



